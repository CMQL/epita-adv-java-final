{"ast":null,"code":"var _jsxFileName = \"E:\\\\JScript\\\\ex01-07\\\\api models\\\\client\\\\src\\\\context\\\\themes.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst themes = {\n  dark: {\n    backgroundColor: \"black\",\n    color: 'white'\n  },\n  light: {\n    backgroundColor: \"White\",\n    color: \"black\"\n  }\n};\nexport const ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isDark, setIsDark] = useState(false);\n  const theme = isDark ? themes.dark : themes.light;\n\n  const toogleTheme = () => {\n    localStorage.setItem(\"isDark\", JSON.stringify(!isDark));\n    setIsDark(!isDark);\n  };\n\n  useEffect(() => {\n    const isDark = localStorage.getItem('isDark') === \"true\";\n    setIsDark(isDark);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: [{\n      theme,\n      isDark\n    }, toogleTheme],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ThemeProvider, \"GtXTseBTBX+trPdcPy4QDKmo6rI=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["E:/JScript/ex01-07/api models/client/src/context/themes.js"],"names":["createContext","useState","useEffect","ThemeContext","themes","dark","backgroundColor","color","light","ThemeProvider","children","isDark","setIsDark","theme","toogleTheme","localStorage","setItem","JSON","stringify","getItem"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAiCC,SAAjC,QAAkD,OAAlD;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEP,MAAMI,MAAM,GAAC;AACTC,EAAAA,IAAI,EAAC;AACDC,IAAAA,eAAe,EAAC,OADf;AAEDC,IAAAA,KAAK,EAAC;AAFL,GADI;AAKTC,EAAAA,KAAK,EAAC;AACFF,IAAAA,eAAe,EAAC,OADd;AAEFC,IAAAA,KAAK,EAAC;AAFJ;AALG,CAAb;AAWA,OAAO,MAAME,aAAa,GAAC,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACvC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBX,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAMY,KAAK,GAACF,MAAM,GAAGP,MAAM,CAACC,IAAV,GAAiBD,MAAM,CAACI,KAA1C;;AAEA,QAAMM,WAAW,GAAE,MAAI;AACnBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,CAACP,MAAhB,CAA9B;AACAC,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAHD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,MAAM,GAAGI,YAAY,CAACI,OAAb,CAAqB,QAArB,MAAiC,MAAhD;AACAP,IAAAA,SAAS,CAACD,MAAD,CAAT;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAAC;AAACE,MAAAA,KAAD;AAAOF,MAAAA;AAAP,KAAD,EAAiBG,WAAjB,CAA9B;AAAA,cACFJ;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAjBM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { createContext, useState,useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nconst themes={\r\n    dark:{\r\n        backgroundColor:\"black\",\r\n        color:'white'\r\n    },\r\n    light:{\r\n        backgroundColor:\"White\",\r\n        color:\"black\"\r\n    }\r\n}\r\n\r\nexport const ThemeProvider=({children}) => {\r\n    const [isDark,setIsDark]=useState(false)\r\n    const theme=isDark ? themes.dark : themes.light\r\n\r\n    const toogleTheme =()=>{\r\n        localStorage.setItem(\"isDark\",JSON.stringify(!isDark))\r\n        setIsDark(!isDark)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const isDark = localStorage.getItem('isDark')===\"true\"\r\n        setIsDark(isDark)\r\n    }, [])\r\n\r\n    return <ThemeContext.Provider value={[{theme,isDark}, toogleTheme]}>\r\n        {children}\r\n    </ThemeContext.Provider>\r\n}"]},"metadata":{},"sourceType":"module"}